<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Protocol Buffers Reference on Protocol Buffers Documentation</title><link>https://protobuf.dev/reference/protobuf/</link><description>Recent content in Protocol Buffers Reference on Protocol Buffers Documentation</description><generator>Hugo</generator><language>en</language><atom:link href="https://protobuf.dev/reference/protobuf/index.xml" rel="self" type="application/rss+xml"/><item><title>Protocol Buffers Edition 2023 Language Specification</title><link>https://protobuf.dev/reference/protobuf/edition-2023-spec/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://protobuf.dev/reference/protobuf/edition-2023-spec/</guid><description>The syntax is specified using Extended Backus-Naur Form (EBNF):
| alternation () grouping [] option (zero or one time) {} repetition (any number of times) Lexical Elements Letters and Digits letter = &amp;#34;A&amp;#34; ... &amp;#34;Z&amp;#34; | &amp;#34;a&amp;#34; ... &amp;#34;z&amp;#34; capitalLetter = &amp;#34;A&amp;#34; ... &amp;#34;Z&amp;#34; decimalDigit = &amp;#34;0&amp;#34; ... &amp;#34;9&amp;#34; octalDigit = &amp;#34;0&amp;#34; ... &amp;#34;7&amp;#34; hexDigit = &amp;#34;0&amp;#34; ... &amp;#34;9&amp;#34; | &amp;#34;A&amp;#34; ... &amp;#34;F&amp;#34; | &amp;#34;a&amp;#34; ... &amp;#34;f&amp;#34; Identifiers ident = letter { letter | decimalDigit | &amp;#34;_&amp;#34; } fullIdent = ident { &amp;#34;.</description></item><item><title>Protocol Buffers Language Specification (Proto2 Syntax)</title><link>https://protobuf.dev/reference/protobuf/proto2-spec/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://protobuf.dev/reference/protobuf/proto2-spec/</guid><description>The syntax is specified using Extended Backus-Naur Form (EBNF):
| alternation () grouping [] option (zero or one time) {} repetition (any number of times) For more information about using proto2, see the language guide.
Lexical Elements Letters and Digits letter = &amp;#34;A&amp;#34; ... &amp;#34;Z&amp;#34; | &amp;#34;a&amp;#34; ... &amp;#34;z&amp;#34; capitalLetter = &amp;#34;A&amp;#34; ... &amp;#34;Z&amp;#34; decimalDigit = &amp;#34;0&amp;#34; ... &amp;#34;9&amp;#34; octalDigit = &amp;#34;0&amp;#34; ... &amp;#34;7&amp;#34; hexDigit = &amp;#34;0&amp;#34; ... &amp;#34;9&amp;#34; | &amp;#34;A&amp;#34; .</description></item><item><title>Protocol Buffers Language Specification (Proto3)</title><link>https://protobuf.dev/reference/protobuf/proto3-spec/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://protobuf.dev/reference/protobuf/proto3-spec/</guid><description>The syntax is specified using Extended Backus-Naur Form (EBNF):
| alternation () grouping [] option (zero or one time) {} repetition (any number of times) For more information about using proto3, see the language guide.
Lexical Elements Letters and Digits letter = &amp;#34;A&amp;#34; ... &amp;#34;Z&amp;#34; | &amp;#34;a&amp;#34; ... &amp;#34;z&amp;#34; decimalDigit = &amp;#34;0&amp;#34; ... &amp;#34;9&amp;#34; octalDigit = &amp;#34;0&amp;#34; ... &amp;#34;7&amp;#34; hexDigit = &amp;#34;0&amp;#34; ... &amp;#34;9&amp;#34; | &amp;#34;A&amp;#34; ... &amp;#34;F&amp;#34; | &amp;#34;a&amp;#34; .</description></item><item><title>Text Format Language Specification</title><link>https://protobuf.dev/reference/protobuf/textformat-spec/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://protobuf.dev/reference/protobuf/textformat-spec/</guid><description>This format is distinct from the format of text within a .proto schema, for example. This document contains reference documentation using the syntax specified in ISO/IEC 14977 EBNF.
Note This is a draft spec reverse-engineered from the C++ text format implementation and may change based on further discussion and review. While an effort has been made to keep text formats consistent across supported languages, incompatibilities are likely to exist. Example convolution_benchmark { label: &amp;#34;NHWC_128x20x20x56x160&amp;#34; input { dimension: [128, 56, 20, 20] data_type: DATA_HALF format: TENSOR_NHWC } } Parsing Overview The language elements in this spec are split into lexical and syntactic categories.</description></item><item><title>Protocol Buffer MIME Types</title><link>https://protobuf.dev/reference/protobuf/mime-types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://protobuf.dev/reference/protobuf/mime-types/</guid><description>All Protobuf documents should have the MIME type application and the subtype protobuf, with the suffix +json for JSON encodings according to the standard, followed by the following parameters:
encoding should be set only to binary, or json, denoting those respective formats. With subtype protobuf+json, encoding has the default json and cannot be set to binary. With subtype protobuf (without +json), encoding has the default binary and cannot be set to json.</description></item><item><title>Protocol Buffers Well-Known Types</title><link>https://protobuf.dev/reference/protobuf/google.protobuf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://protobuf.dev/reference/protobuf/google.protobuf/</guid><description>Index Any (message) Api (message) BoolValue (message) BytesValue (message) DoubleValue (message) Duration (message) Empty (message) Enum (message) EnumValue (message) Field (message) Field.Cardinality (enum) Field.Kind (enum) FieldMask (message) FloatValue (message) Int32Value (message) Int64Value (message) ListValue (message) Method (message) Mixin (message) NullValue (enum) Option (message) SourceContext (message) StringValue (message) Struct (message) Syntax (enum) Timestamp (message) Type (message) UInt32Value (message) UInt64Value (message) Value (message) Well-Known Types that end in &amp;ldquo;Value&amp;rdquo; are wrapper messages for other types, such as BoolValue and EnumValue.</description></item></channel></rss>