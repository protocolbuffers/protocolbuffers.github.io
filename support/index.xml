<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Support on Protocol Buffers Documentation</title><link>https://protobuf.dev/support/</link><description>Recent content in Support on Protocol Buffers Documentation</description><generator>Hugo</generator><language>en</language><atom:link href="https://protobuf.dev/support/index.xml" rel="self" type="application/rss+xml"/><item><title>Version Support</title><link>https://protobuf.dev/support/version-support/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://protobuf.dev/support/version-support/</guid><description>Support windows for protoc and the various languages are covered in the tables later in this topic. Version numbers throughout this topic use SemVer conventions; in the version &amp;ldquo;3.21.7,&amp;rdquo; we say that &amp;ldquo;3&amp;rdquo; is the major version, &amp;ldquo;21&amp;rdquo; is the minor version, and &amp;ldquo;7&amp;rdquo; is the micro or patch number.
Starting with the v20.x protoc release, we changed our versioning scheme to enable nimbler updates to language-specific parts of Protocol Buffers.</description></item><item><title>Migration Guide</title><link>https://protobuf.dev/support/migration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://protobuf.dev/support/migration/</guid><description>Changes in v30.0 The following is a list of the breaking changes made to versions of the libraries, and how to update your code to accommodate the changes.
This covers breaking changes announced in News Announcements for v30.x and Release Notes for v30.0.
Replaced CMake Submodules with Fetched Deps Previously, our default CMake behavior was to use Git submodules to grab pinned dependencies. Specifying -Dprotobuf_ABSL_PROVIDER=package would flip our CMake configs to look for local installations of Abseil (with similar options for jsoncpp and gtest).</description></item><item><title>Cross-Version Runtime Guarantee</title><link>https://protobuf.dev/support/cross-version-runtime-guarantee/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://protobuf.dev/support/cross-version-runtime-guarantee/</guid><description>Protobuf language bindings have two components. The generated code (typically produced from protoc) and the runtime libraries that must be included when using the generated code. When these come from different releases of protobuf, we are in a &amp;ldquo;cross version runtime&amp;rdquo; situation.
We intend to offer the following guarantees across all languages except C++ and Rust. These are the default guarantees; however, owners of protobuf code generators and runtimes may explicitly override them with more specific guarantees for that language.</description></item></channel></rss>